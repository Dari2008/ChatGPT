<?php // generated by https://www.devsense.com/

/**
 * The SensitiveParameterValue class allows wrapping sensitive values to protect them against accidental exposure.
 * Values of parameters having the SensitiveParameter attribute will automatically be wrapped inside of a SensitiveParameterValue object within stack traces.
 */
final class SensitiveParameterValue
{
	#region Properties

	#
	private $value;

	#endregion

	#region Functions

	/**
	 * Returns the sensitive value
	 * @return mixed The sensitive value.
	 */
	function getValue() { return $this->value; }

	/**
	 * Constructs a new SensitiveParameterValue object
	 *
	 * @param mixed $value An arbitrary value that should be stored inside the SensitiveParameterValue object.
	 */
	function __construct($value) { 
        $this->value = $value;
    }

	/**
	 * Protects the sensitive value against accidental exposure
	 * Returns an empty `array` to protect the sensitive value against accidental exposure when using var_dump().
	 * @return array An empty `array`.
	 */
	function __debugInfo() { 
        return [];
    }

	function __toString() { 
		return "SensitiveParameterValue";
	}

	function __serialize() { 
		return "SensitiveParameterValue";
	}

	#endregion
}